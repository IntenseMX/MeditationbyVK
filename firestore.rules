rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }

    function isAdmin() {
      return isSignedIn() && request.auth.token.admin == true;
    }

    // Public content: published meditations, active categories
    match /meditations/{id} {
      // Allow public reads for published, and full reads for admins (drafts included)
      allow read: if resource.data.status == 'published' || isAdmin();
      allow create, update, delete: if isAdmin();
    }

    match /categories/{id} {
      allow read: if resource.data.active == true;
      allow create, update, delete: if isAdmin();
    }

    // Users manage only their own profile
    match /users/{uid} {
      allow read, write: if isSignedIn() && request.auth.uid == uid;
    }

    // User progress keyed as {uid}_{meditationId}
    match /userProgress/{docId} {
      allow read, write: if isSignedIn() &&
        docId.split('_')[0] == request.auth.uid &&
        docId.indexOf('_') == request.auth.uid.size();
    }

    // Admin audit: append-only by admins; no updates/deletes
    match /adminAudit/{auditId} {
      allow create: if isAdmin();
      allow read: if isAdmin();
      allow update, delete: if false;
    }

    // Deny everything else by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}